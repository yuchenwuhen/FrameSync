// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PBMatch.proto

#ifndef PROTOBUF_PBMatch_2eproto__INCLUDED
#define PROTOBUF_PBMatch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
// @@protoc_insertion_point(includes)

namespace PBMatch {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_PBMatch_2eproto();
void protobuf_AssignDesc_PBMatch_2eproto();
void protobuf_ShutdownFile_PBMatch_2eproto();

class TcpRequestMatch;
class TcpCancelMatch;
class TcpResponseRequestMatch;
class TcpResponseCancelMatch;

// ===================================================================

class TcpRequestMatch : public ::google::protobuf::MessageLite {
 public:
  TcpRequestMatch();
  virtual ~TcpRequestMatch();

  TcpRequestMatch(const TcpRequestMatch& from);

  inline TcpRequestMatch& operator=(const TcpRequestMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TcpRequestMatch& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TcpRequestMatch* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TcpRequestMatch* other);

  // implements Message ----------------------------------------------

  TcpRequestMatch* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TcpRequestMatch& from);
  void MergeFrom(const TcpRequestMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // required int32 roleID = 2;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIDFieldNumber = 2;
  inline ::google::protobuf::int32 roleid() const;
  inline void set_roleid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBMatch.TcpRequestMatch)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_roleid();
  inline void clear_has_roleid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 uid_;
  ::google::protobuf::int32 roleid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_PBMatch_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_PBMatch_2eproto();
  #endif
  friend void protobuf_AssignDesc_PBMatch_2eproto();
  friend void protobuf_ShutdownFile_PBMatch_2eproto();

  void InitAsDefaultInstance();
  static TcpRequestMatch* default_instance_;
};
// -------------------------------------------------------------------

class TcpCancelMatch : public ::google::protobuf::MessageLite {
 public:
  TcpCancelMatch();
  virtual ~TcpCancelMatch();

  TcpCancelMatch(const TcpCancelMatch& from);

  inline TcpCancelMatch& operator=(const TcpCancelMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TcpCancelMatch& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TcpCancelMatch* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TcpCancelMatch* other);

  // implements Message ----------------------------------------------

  TcpCancelMatch* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TcpCancelMatch& from);
  void MergeFrom(const TcpCancelMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::int32 uid() const;
  inline void set_uid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBMatch.TcpCancelMatch)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 uid_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_PBMatch_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_PBMatch_2eproto();
  #endif
  friend void protobuf_AssignDesc_PBMatch_2eproto();
  friend void protobuf_ShutdownFile_PBMatch_2eproto();

  void InitAsDefaultInstance();
  static TcpCancelMatch* default_instance_;
};
// -------------------------------------------------------------------

class TcpResponseRequestMatch : public ::google::protobuf::MessageLite {
 public:
  TcpResponseRequestMatch();
  virtual ~TcpResponseRequestMatch();

  TcpResponseRequestMatch(const TcpResponseRequestMatch& from);

  inline TcpResponseRequestMatch& operator=(const TcpResponseRequestMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TcpResponseRequestMatch& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TcpResponseRequestMatch* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TcpResponseRequestMatch* other);

  // implements Message ----------------------------------------------

  TcpResponseRequestMatch* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TcpResponseRequestMatch& from);
  void MergeFrom(const TcpResponseRequestMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PBMatch.TcpResponseRequestMatch)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_PBMatch_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_PBMatch_2eproto();
  #endif
  friend void protobuf_AssignDesc_PBMatch_2eproto();
  friend void protobuf_ShutdownFile_PBMatch_2eproto();

  void InitAsDefaultInstance();
  static TcpResponseRequestMatch* default_instance_;
};
// -------------------------------------------------------------------

class TcpResponseCancelMatch : public ::google::protobuf::MessageLite {
 public:
  TcpResponseCancelMatch();
  virtual ~TcpResponseCancelMatch();

  TcpResponseCancelMatch(const TcpResponseCancelMatch& from);

  inline TcpResponseCancelMatch& operator=(const TcpResponseCancelMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::std::string& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::std::string* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const TcpResponseCancelMatch& default_instance();

  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  // Returns the internal default instance pointer. This function can
  // return NULL thus should not be used by the user. This is intended
  // for Protobuf internal code. Please use default_instance() declared
  // above instead.
  static inline const TcpResponseCancelMatch* internal_default_instance() {
    return default_instance_;
  }
  #endif

  void Swap(TcpResponseCancelMatch* other);

  // implements Message ----------------------------------------------

  TcpResponseCancelMatch* New() const;
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from);
  void CopyFrom(const TcpResponseCancelMatch& from);
  void MergeFrom(const TcpResponseCancelMatch& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  void DiscardUnknownFields();
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::std::string GetTypeName() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:PBMatch.TcpResponseCancelMatch)
 private:

  ::std::string _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  friend void  protobuf_AddDesc_PBMatch_2eproto_impl();
  #else
  friend void  protobuf_AddDesc_PBMatch_2eproto();
  #endif
  friend void protobuf_AssignDesc_PBMatch_2eproto();
  friend void protobuf_ShutdownFile_PBMatch_2eproto();

  void InitAsDefaultInstance();
  static TcpResponseCancelMatch* default_instance_;
};
// ===================================================================


// ===================================================================

// TcpRequestMatch

// required int32 uid = 1;
inline bool TcpRequestMatch::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TcpRequestMatch::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TcpRequestMatch::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TcpRequestMatch::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 TcpRequestMatch::uid() const {
  // @@protoc_insertion_point(field_get:PBMatch.TcpRequestMatch.uid)
  return uid_;
}
inline void TcpRequestMatch::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PBMatch.TcpRequestMatch.uid)
}

// required int32 roleID = 2;
inline bool TcpRequestMatch::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TcpRequestMatch::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TcpRequestMatch::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TcpRequestMatch::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 TcpRequestMatch::roleid() const {
  // @@protoc_insertion_point(field_get:PBMatch.TcpRequestMatch.roleID)
  return roleid_;
}
inline void TcpRequestMatch::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:PBMatch.TcpRequestMatch.roleID)
}

// -------------------------------------------------------------------

// TcpCancelMatch

// required int32 uid = 1;
inline bool TcpCancelMatch::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TcpCancelMatch::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TcpCancelMatch::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TcpCancelMatch::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
inline ::google::protobuf::int32 TcpCancelMatch::uid() const {
  // @@protoc_insertion_point(field_get:PBMatch.TcpCancelMatch.uid)
  return uid_;
}
inline void TcpCancelMatch::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PBMatch.TcpCancelMatch.uid)
}

// -------------------------------------------------------------------

// TcpResponseRequestMatch

// -------------------------------------------------------------------

// TcpResponseCancelMatch


// @@protoc_insertion_point(namespace_scope)

}  // namespace PBMatch

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PBMatch_2eproto__INCLUDED
